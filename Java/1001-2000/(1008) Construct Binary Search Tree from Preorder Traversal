/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode root = new TreeNode(preorder[0]);
        for (int i = 1; i < preorder.length; i++)
        {
            root = insert(root, preorder[i]);
        }
        
        return root;
    }
    
    public static TreeNode insert(TreeNode root, int data)
    {
        if (root == null)
        {
            return createNode(data);
        }
        else if (data < root.val)
        {
            root.left = insert(root.left, data);
        }
        else if (data > root.val)
        {
            root.right = insert(root.right, data);
        }
        
        return root;
    }
    
    public static TreeNode createNode(int data)
    {
        TreeNode newNode = new TreeNode(data);
        newNode.left = null;
        newNode.right = null;
        
        return newNode;
    }
}
